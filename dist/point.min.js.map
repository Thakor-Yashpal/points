{"version":3,"sources":["point.js"],"names":["Vector","x","y","this","GravityPoint","radius","targets","call","currentRadius","_targets","particles","gravities","gravity","_speed","Particle","_latest","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","callback","add","b","a","sub","scale","clone","v","s","random","Math","prototype","set","_typeof","lengthSq","length","sqrt","normalize","m","dy","distanceTo","dx","atan2","angleTo","distanceToSq","lerp","t","destroyed","RADIUS_LIMIT","_easeRadius","interferenceToPoint","_collapsing","o","hitTest","p","startDrag","dragging","isMouseOver","drag","dragToPoint","_dragDistance","endDrag","dragStartPoint","collapse","render","addSpeed","d","ctx","absorp","len","i","g","area","PI","createRadialGradient","addColorStop","beginPath","fillStyle","garea","_draw","r","grd","arc","fill","restore","update","PARTICLE_RADIUS","G_POINT_RADIUS","canvas","context","cursor","screenWidth","screenHeight","grad","mouse","resize","e","width","innerWidth","bufferCvs","height","getContext","bufferCtx","cx","cy","addParticle","num","loop","save","floor","BACKGROUND_COLOR","fillRect","push","globalCompositeOperation","globalAlpha","document","strokeStyle","lineCap","lineJoin","particleNum","hit","style","removeParticle","clientX","clientY","addEventListener","control","mouseDown","mouseUp","moveTo","step","name","onChange","n","splice","gui","close","lineWidth","lineTo","stroke","drawImage"],"mappings":"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","file":"point.min.js","sourcesContent":["window.requestAnimationFrame = (function() {\r\n    return window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.oRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame ||\r\n        function(callback) {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n})();\r\n\r\n\r\n/**\r\n * Vector\r\n */\r\nfunction Vector(x, y) {\r\n    this.x = x || 0;\r\n    this.y = y || 0;\r\n}\r\n\r\nVector.add = function(a, b) {\r\n    return new Vector(a.x + b.x, a.y + b.y);\r\n};\r\n\r\nVector.sub = function(a, b) {\r\n    return new Vector(a.x - b.x, a.y - b.y);\r\n};\r\n\r\nVector.scale = function(v, s) {\r\n    return v.clone().scale(s);\r\n};\r\n\r\nVector.random = function() {\r\n    return new Vector(\r\n        Math.random() * 2 - 1,\r\n        Math.random() * 2 - 1\r\n    );\r\n};\r\n\r\nVector.prototype = {\r\n    set: function(x, y) {\r\n        if (typeof x === 'object') {\r\n            y = x.y;\r\n            x = x.x;\r\n        }\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n        return this;\r\n    },\r\n\r\n    add: function(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        return this;\r\n    },\r\n\r\n    sub: function(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        return this;\r\n    },\r\n\r\n    scale: function(s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        return this;\r\n    },\r\n\r\n    length: function() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    },\r\n\r\n    lengthSq: function() {\r\n        return this.x * this.x + this.y * this.y;\r\n    },\r\n\r\n    normalize: function() {\r\n        var m = Math.sqrt(this.x * this.x + this.y * this.y);\r\n        if (m) {\r\n            this.x /= m;\r\n            this.y /= m;\r\n        }\r\n        return this;\r\n    },\r\n\r\n    angle: function() {\r\n        return Math.atan2(this.y, this.x);\r\n    },\r\n\r\n    angleTo: function(v) {\r\n        var dx = v.x - this.x,\r\n            dy = v.y - this.y;\r\n        return Math.atan2(dy, dx);\r\n    },\r\n\r\n    distanceTo: function(v) {\r\n        var dx = v.x - this.x,\r\n            dy = v.y - this.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    },\r\n\r\n    distanceToSq: function(v) {\r\n        var dx = v.x - this.x,\r\n            dy = v.y - this.y;\r\n        return dx * dx + dy * dy;\r\n    },\r\n\r\n    lerp: function(v, t) {\r\n        this.x += (v.x - this.x) * t;\r\n        this.y += (v.y - this.y) * t;\r\n        return this;\r\n    },\r\n\r\n    clone: function() {\r\n        return new Vector(this.x, this.y);\r\n    },\r\n\r\n    toString: function() {\r\n        return '(x:' + this.x + ', y:' + this.y + ')';\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * GravityPoint\r\n */\r\nfunction GravityPoint(x, y, radius, targets) {\r\n    Vector.call(this, x, y);\r\n    this.radius = radius;\r\n    this.currentRadius = radius * 0.5;\r\n\r\n    this._targets = {\r\n        particles: targets.particles || [],\r\n        gravities: targets.gravities || []\r\n    };\r\n    this._speed = new Vector();\r\n}\r\n\r\nGravityPoint.RADIUS_LIMIT = 65;\r\nGravityPoint.interferenceToPoint = true;\r\n\r\nGravityPoint.prototype = (function(o) {\r\n    var s = new Vector(0, 0),\r\n        p;\r\n    for (p in o) s[p] = o[p];\r\n    return s;\r\n})({\r\n    gravity: 0.05,\r\n    isMouseOver: false,\r\n    dragging: false,\r\n    destroyed: false,\r\n    _easeRadius: 0,\r\n    _dragDistance: null,\r\n    _collapsing: false,\r\n\r\n    hitTest: function(p) {\r\n        return this.distanceTo(p) < this.radius;\r\n    },\r\n\r\n    startDrag: function(dragStartPoint) {\r\n        this._dragDistance = Vector.sub(dragStartPoint, this);\r\n        this.dragging = true;\r\n    },\r\n\r\n    drag: function(dragToPoint) {\r\n        this.x = dragToPoint.x - this._dragDistance.x;\r\n        this.y = dragToPoint.y - this._dragDistance.y;\r\n    },\r\n\r\n    endDrag: function() {\r\n        this._dragDistance = null;\r\n        this.dragging = false;\r\n    },\r\n\r\n    addSpeed: function(d) {\r\n        this._speed = this._speed.add(d);\r\n    },\r\n\r\n    collapse: function(e) {\r\n        this.currentRadius *= 1.75;\r\n        this._collapsing = true;\r\n    },\r\n\r\n    render: function(ctx) {\r\n        if (this.destroyed) return;\r\n\r\n        var particles = this._targets.particles,\r\n            i, len;\r\n\r\n        for (i = 0, len = particles.length; i < len; i++) {\r\n            particles[i].addSpeed(Vector.sub(this, particles[i]).normalize().scale(this.gravity));\r\n        }\r\n\r\n        this._easeRadius = (this._easeRadius + (this.radius - this.currentRadius) * 0.07) * 0.95;\r\n        this.currentRadius += this._easeRadius;\r\n        if (this.currentRadius < 0) this.currentRadius = 0;\r\n\r\n        if (this._collapsing) {\r\n            this.radius *= 0.75;\r\n            if (this.currentRadius < 1) this.destroyed = true;\r\n            this._draw(ctx);\r\n            return;\r\n        }\r\n\r\n        var gravities = this._targets.gravities,\r\n            g, absorp,\r\n            area = this.radius * this.radius * Math.PI,\r\n            garea;\r\n\r\n        for (i = 0, len = gravities.length; i < len; i++) {\r\n            g = gravities[i];\r\n\r\n            if (g === this || g.destroyed) continue;\r\n\r\n            if (\r\n                (this.currentRadius >= g.radius || this.dragging) &&\r\n                this.distanceTo(g) < (this.currentRadius + g.radius) * 0.85\r\n            ) {\r\n                g.destroyed = true;\r\n                this.gravity += g.gravity;\r\n\r\n                absorp = Vector.sub(g, this).scale(g.radius / this.radius * 0.5);\r\n                this.addSpeed(absorp);\r\n\r\n                garea = g.radius * g.radius * Math.PI;\r\n                this.currentRadius = Math.sqrt((area + garea * 3) / Math.PI);\r\n                this.radius = Math.sqrt((area + garea) / Math.PI);\r\n            }\r\n\r\n            g.addSpeed(Vector.sub(this, g).normalize().scale(this.gravity));\r\n        }\r\n\r\n        if (GravityPoint.interferenceToPoint && !this.dragging)\r\n            this.add(this._speed);\r\n\r\n        this._speed = new Vector();\r\n\r\n        if (this.currentRadius > GravityPoint.RADIUS_LIMIT) this.collapse();\r\n\r\n        this._draw(ctx);\r\n    },\r\n\r\n    _draw: function(ctx) {\r\n        var grd, r;\r\n\r\n        ctx.save();\r\n\r\n        grd = ctx.createRadialGradient(this.x, this.y, this.radius, this.x, this.y, this.radius * 5);\r\n        grd.addColorStop(0, 'rgba(0, 0, 0, 0.1)');\r\n        grd.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius * 5, 0, Math.PI * 2, false);\r\n        ctx.fillStyle = grd;\r\n        ctx.fill();\r\n\r\n        r = Math.random() * this.currentRadius * 0.7 + this.currentRadius * 0.3;\r\n        grd = ctx.createRadialGradient(this.x, this.y, r, this.x, this.y, this.currentRadius);\r\n        grd.addColorStop(0, 'rgba(0, 0, 0, 1)');\r\n        grd.addColorStop(1, Math.random() < 0.2 ? 'rgba(255, 196, 0, 0.15)' : 'rgba(103, 181, 191, 0.75)');\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.currentRadius, 0, Math.PI * 2, false);\r\n        ctx.fillStyle = grd;\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n});\r\n\r\n\r\n/**\r\n * Particle\r\n */\r\nfunction Particle(x, y, radius) {\r\n    Vector.call(this, x, y);\r\n    this.radius = radius;\r\n\r\n    this._latest = new Vector();\r\n    this._speed = new Vector();\r\n}\r\n\r\nParticle.prototype = (function(o) {\r\n    var s = new Vector(0, 0),\r\n        p;\r\n    for (p in o) s[p] = o[p];\r\n    return s;\r\n})({\r\n    addSpeed: function(d) {\r\n        this._speed.add(d);\r\n    },\r\n\r\n    update: function() {\r\n        if (this._speed.length() > 12) this._speed.normalize().scale(12);\r\n\r\n        this._latest.set(this);\r\n        this.add(this._speed);\r\n    }\r\n\r\n    // render: function(ctx) {\r\n    //     if (this._speed.length() > 12) this._speed.normalize().scale(12);\r\n\r\n    //     this._latest.set(this);\r\n    //     this.add(this._speed);\r\n\r\n    //     ctx.save();\r\n    //     ctx.fillStyle = ctx.strokeStyle = '#fff';\r\n    //     ctx.lineCap = ctx.lineJoin = 'round';\r\n    //     ctx.lineWidth = this.radius * 2;\r\n    //     ctx.beginPath();\r\n    //     ctx.moveTo(this.x, this.y);\r\n    //     ctx.lineTo(this._latest.x, this._latest.y);\r\n    //     ctx.stroke();\r\n    //     ctx.beginPath();\r\n    //     ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n    //     ctx.fill();\r\n    //     ctx.restore();\r\n    // }\r\n});\r\n\r\n\r\n\r\n// Initialize\r\n\r\n(function() {\r\n\r\n    // Configs\r\n\r\n    var BACKGROUND_COLOR = 'rgba(11, 51, 56, 1)',\r\n        PARTICLE_RADIUS = 1,\r\n        G_POINT_RADIUS = 10,\r\n        G_POINT_RADIUS_LIMITS = 65;\r\n\r\n\r\n    // Vars\r\n\r\n    var canvas, context,\r\n        bufferCvs, bufferCtx,\r\n        screenWidth, screenHeight,\r\n        mouse = new Vector(),\r\n        gravities = [],\r\n        particles = [],\r\n        grad,\r\n        gui, control;\r\n\r\n\r\n    // Event Listeners\r\n\r\n    function resize(e) {\r\n        screenWidth = canvas.width = window.innerWidth;\r\n        screenHeight = canvas.height = window.innerHeight;\r\n        bufferCvs.width = screenWidth;\r\n        bufferCvs.height = screenHeight;\r\n        context = canvas.getContext('2d');\r\n        bufferCtx = bufferCvs.getContext('2d');\r\n\r\n        var cx = canvas.width * 0.5,\r\n            cy = canvas.height * 0.5;\r\n\r\n        grad = context.createRadialGradient(cx, cy, 0, cx, cy, Math.sqrt(cx * cx + cy * cy));\r\n        grad.addColorStop(0, 'rgba(0, 0, 0, 0)');\r\n        grad.addColorStop(1, 'rgba(0, 0, 0, 0.35)');\r\n    }\r\n\r\n    function mouseMove(e) {\r\n        mouse.set(e.clientX, e.clientY);\r\n\r\n        var i, g, hit = false;\r\n        for (i = gravities.length - 1; i >= 0; i--) {\r\n            g = gravities[i];\r\n            if ((!hit && g.hitTest(mouse)) || g.dragging)\r\n                g.isMouseOver = hit = true;\r\n            else\r\n                g.isMouseOver = false;\r\n        }\r\n\r\n        canvas.style.cursor = hit ? 'pointer' : 'default';\r\n    }\r\n\r\n    function mouseDown(e) {\r\n        for (var i = gravities.length - 1; i >= 0; i--) {\r\n            if (gravities[i].isMouseOver) {\r\n                gravities[i].startDrag(mouse);\r\n                return;\r\n            }\r\n        }\r\n        gravities.push(new GravityPoint(e.clientX, e.clientY, G_POINT_RADIUS, {\r\n            particles: particles,\r\n            gravities: gravities\r\n        }));\r\n    }\r\n\r\n    function mouseUp(e) {\r\n        for (var i = 0, len = gravities.length; i < len; i++) {\r\n            if (gravities[i].dragging) {\r\n                gravities[i].endDrag();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function doubleClick(e) {\r\n        for (var i = gravities.length - 1; i >= 0; i--) {\r\n            if (gravities[i].isMouseOver) {\r\n                gravities[i].collapse();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // in  line code \r\n\r\n    function addParticle(num) {\r\n        var i, p;\r\n        for (i = 0; i < num; i++) {\r\n            p = new Particle(\r\n                Math.floor(Math.random() * screenWidth - PARTICLE_RADIUS * 2) + 1 + PARTICLE_RADIUS,\r\n                Math.floor(Math.random() * screenHeight - PARTICLE_RADIUS * 2) + 1 + PARTICLE_RADIUS,\r\n                PARTICLE_RADIUS\r\n            );\r\n            p.addSpeed(Vector.random());\r\n            particles.push(p);\r\n        }\r\n    }\r\n\r\n    function removeParticle(num) {\r\n        if (particles.length < num) num = particles.length;\r\n        for (var i = 0; i < num; i++) {\r\n            particles.pop();\r\n        }\r\n    }\r\n\r\n\r\n    // GUI Control\r\n\r\n    control = {\r\n        particleNum: 100\r\n    };\r\n\r\n\r\n    // Init\r\n\r\n    canvas = document.getElementById('c');\r\n    bufferCvs = document.createElement('canvas');\r\n\r\n    window.addEventListener('resize', resize, false);\r\n    resize(null);\r\n\r\n    addParticle(control.particleNum);\r\n\r\n    canvas.addEventListener('mousemove', mouseMove, false);\r\n    canvas.addEventListener('mousedown', mouseDown, false);\r\n    canvas.addEventListener('mouseup', mouseUp, false);\r\n    canvas.addEventListener('dblclick', doubleClick, false);\r\n\r\n\r\n    // GUI\r\n\r\n    gui = new dat.GUI();\r\n    gui.add(control, 'particleNum', 0, 500).step(1).name('Particle Num').onChange(function() {\r\n        var n = (control.particleNum | 0) - particles.length;\r\n        if (n > 0)\r\n            addParticle(n);\r\n        else if (n < 0)\r\n            removeParticle(-n);\r\n    });\r\n    gui.add(GravityPoint, 'interferenceToPoint').name('Interference Between Point');\r\n    gui.close();\r\n\r\n\r\n    // Start Update\r\n\r\n    var loop = function() {\r\n        var i, len, g, p;\r\n\r\n        context.save();\r\n        context.fillStyle = BACKGROUND_COLOR;\r\n        context.fillRect(0, 0, screenWidth, screenHeight);\r\n        context.fillStyle = grad;\r\n        context.fillRect(0, 0, screenWidth, screenHeight);\r\n        context.restore();\r\n\r\n        for (i = 0, len = gravities.length; i < len; i++) {\r\n            g = gravities[i];\r\n            if (g.dragging) g.drag(mouse);\r\n            g.render(context);\r\n            if (g.destroyed) {\r\n                gravities.splice(i, 1);\r\n                len--;\r\n                i--;\r\n            }\r\n        }\r\n\r\n        bufferCtx.save();\r\n        bufferCtx.globalCompositeOperation = 'destination-out';\r\n        bufferCtx.globalAlpha = 0.35;\r\n        bufferCtx.fillRect(0, 0, screenWidth, screenHeight);\r\n        bufferCtx.restore();\r\n\r\n        // len\r\n        len = particles.length;\r\n        bufferCtx.save();\r\n        bufferCtx.fillStyle = bufferCtx.strokeStyle = '#fff';\r\n        bufferCtx.lineCap = bufferCtx.lineJoin = 'round';\r\n        bufferCtx.lineWidth = PARTICLE_RADIUS * 2;\r\n        bufferCtx.beginPath();\r\n        for (i = 0; i < len; i++) {\r\n            p = particles[i];\r\n            p.update();\r\n            bufferCtx.moveTo(p.x, p.y);\r\n            bufferCtx.lineTo(p._latest.x, p._latest.y);\r\n        }\r\n        bufferCtx.stroke();\r\n        bufferCtx.beginPath();\r\n        for (i = 0; i < len; i++) {\r\n            p = particles[i];\r\n            bufferCtx.moveTo(p.x, p.y);\r\n            bufferCtx.arc(p.x, p.y, p.radius, 0, Math.PI * 2, false);\r\n        }\r\n        bufferCtx.fill();\r\n        bufferCtx.restore();\r\n\r\n\r\n        context.drawImage(bufferCvs, 0, 0);\r\n\r\n        requestAnimationFrame(loop);\r\n    };\r\n    loop();\r\n\r\n})();"]}